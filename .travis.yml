language: c
matrix:
  include:
    - name: linux-xenial-gcc
      os: linux
      env: HINTS=linux LUA_VERSION=5.4.0
      compiler: gcc
      script:
        - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
        - make fetch-lua
        - test -d "lib/lua-$LUA_VERSION/src" || exit 0
        - make install
    - name: linux-xenial-gcc-nocommon
      os: linux
      env: HINTS=linux LUA_VERSION=5.4.0
      compiler: gcc
      script:
        - echo "CFLAGS+=-fno-common" >>sys/unix/hints/$HINTS
        - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
        - make fetch-lua
        - test -d "lib/lua-$LUA_VERSION/src" || exit 0
        - make install
    - name: linux-bionic-gcc
      os: linux
      env: HINTS=linux LUA_VERSION=5.4.0
      dist: bionic
      compiler: gcc
      script:
        - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
        - make fetch-lua
        - test -d "lib/lua-$LUA_VERSION/src" || exit 0
        - make install
    - name: linux-xenial-clang
      os: linux
      env: HINTS=linux LUA_VERSION=5.4.0
      compiler: clang
      script:
        - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
        - make fetch-lua
        - test -d "lib/lua-$LUA_VERSION/src" || exit 0
        - make install
    - name: linux-xenial-gcc-x11
      os: linux
      env: HINTS=linux-x11 LUA_VERSION=5.4.0
      compiler: gcc
      addons:
        apt:
          packages:
            - libx11-dev
            - libxaw7-dev
            - xfonts-utils
      script:
        - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
        - make fetch-lua
        - test -d "lib/lua-$LUA_VERSION/src" || exit 0
        - make install
    - name: linux-xenial-gcc-qt5
      os: linux
      env: HINTS=linux-qt5 LUA_VERSION=5.4.0
      compiler: gcc
      addons:
        apt:
          packages:
            - libx11-dev
            - libxaw7-dev
            - xfonts-utils
            - qtbase5-dev
            - qtmultimedia5-dev
            - qtbase5-dev-tools
      script:
        - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
        - make fetch-lua
        - test -d "lib/lua-$LUA_VERSION/src" || exit 0
        - make QT_SELECT=5 MOC=moc install
    - name: linux-bionic-gcc-x11
      os: linux
      env: HINTS=linux-x11 LUA_VERSION=5.4.0
      dist: bionic
      compiler: gcc
      addons:
        apt:
          packages:
            - libx11-dev
            - libxaw7-dev
            - xfonts-utils
      script:
        - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
        - make fetch-lua
        - test -d "lib/lua-$LUA_VERSION/src" || exit 0
        - make install
    - name: linux-xenial-gcc-minimal
      os: linux
      env: HINTS=linux-minimal LUA_VERSION=5.4.0
      compiler: gcc
      script: |
              cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
              sed -i '/^#define CLIPPING/d'       include/config.h
              sed -i '/^#define COMPRESS/d'       include/config.h
              #sed -i '/^#define DOAGAIN/d'        include/config.h
              sed -i '/^#define DUMPLOG/d'        include/config.h
              #sed -i '/^#define GDBPATH/d'        include/config.h
              #sed -i '/^#define GREPPATH/d'       include/config.h
              sed -i '/^#define INSURANCE/d'      include/config.h
              sed -i '/^#define LOGFILE/d'        include/config.h
              sed -i '/^#define NEWS/d'           include/config.h
              sed -i '/^#define PANICLOG/d'       include/config.h
              #sed -i '/^#define STATUS_HILITES/d' include/config.h
              sed -i '/^#define SYSCF/d'          include/config.h
              sed -i '/^#define USER_SOUNDS/d'    include/config.h
              sed -i '/^#define XLOGFILE/d'       include/config.h

              sed -i '/^#define MAIL/d'           include/unixconf.h
              sed -i '/^#define SHELL/d'          include/unixconf.h
              sed -i '/^#define SUSPEND/d'        include/unixconf.h
              sed -i 's/^#define TEXTCOLOR//'     include/unixconf.h
              make fetch-lua
              test -d "lib/lua-$LUA_VERSION/src" || exit 0
              make install
              cat dat/options
    - name: windows-visualstudio
      os: windows
      language: shell
      script:
        - ./win/win32/vs2017/travisci.sh
#    - name: windows-mingw
#      os: windows
#     install: choco install mingw
      script:
        - export ADD_CURSES=Y
        - export PDCURSES_TOP=../lib/pdcurses
        - export LUA_VERSION=5.4.0
        - sh sys/winnt/travis-gcc.sh
        - test -d "lib/lua-$LUA_VERSION/src" || exit 0
        - test -d "lib/pdcurses" || exit 0
        - cd src
        - cp ../sys/winnt/Makefile.gcc ./Makefile
        - mingw32-make install
    - name: msdos-linuxhost-crosscompile
      os: linux
      env: HINTS=linux LUA_VERSION=5.4.0
      compiler: gcc
      script:
#        - export
        - cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
        - make fetch-lua
        - test -d "lib/lua-$LUA_VERSION/src" || exit 0
        - cd lib/lua-$LUA_VERSION/src && make a && cd ../../.. 
        - sh sys/msdos/msdos-cross-compile.sh
  exclude:
  - os: osx
    osx_image: xcode10.2
    env: HINTS=macosx10.14
    compiler: clang
    script: cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../ && make install
sudo: false
deploy:
  provider: releases
  api_key:
    secure: b/g11ewW6d6oeulqVXmrdeaTP1PBh60EDZvB6b2pyQxT/MTfL0hrVuuXutdSUKWhams2bxeCfzUCdmC3siqSlyXLDpUHhPRnW+Y8TNVApB6Dymg+nbi/+5d/v/wUSYfBJDm6o7dUMJHS5g8xO8RKFhLXu9fbmg0OrcOc42xaa+OHAqJZF+a2oZTnf/olv57PDOsBXOS6q7A5160IpH4wFkoT/4m6xdqGRNjePWQIrzzH3Jsnqf4o9pbpbCFOKHW9ekWqc+y6QBBOxQO+grhSwbAHCs8afCTPJEQ7TMSBMN6XyvyLGYepv/1BPxd5onm6aKcCaKgDyqHrNObjEyy1tH/a9WL4LegoOFSK7RJuBPUyCjYyPQ2o9mY0/ctrh6ta/JL5zVhNmdEC/jZvU5NyBSMkZy/c4as9Lq7CSuvhsjLCic/lR8Kfr9pae6EpG8oNfrMUcUMH+dulF4eRRyIzV+9beRDhIFjXue6UIRFlaBAw0XOlD3poW6lgurPzyC/v4Kji+tcds65uoq3jVTB/8wQckqOANOziOLCvI1OrvwnHVYt7G3Oa1NSaMwN3yF0fIsWqq1hDwz8M4c4wzrLJauCYdM0a85EHHjSo2nChLDEMiYdUNSY/r5++r8QMj0GCYwB9Xx/5ew6BTfLgmz2EN1XUg+7xwAn0n0LGYR5qcBA=
  file_glob: true
  file:
    - "$TRAVIS_TAG.x86.zip"
  skip_cleanup: true
  on:
    tags: true
  prerelease: true
  name: "Test release build of SpliceHack 0.7.1"
  body: "This is an auto generated test release build of SpliceHack 0.7.1"
